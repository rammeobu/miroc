
Ptj08_uart_stdin_cir_queue.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000070  00800200  00000ca4  00000d38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ca4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000091  00800270  00800270  00000da8  2**0
                  ALLOC
  3 .stab         00000f24  00000000  00000000  00000da8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000027c  00000000  00000000  00001ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000220  00000000  00000000  00001f48  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a57  00000000  00000000  00002168  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cc3  00000000  00000000  00003bbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f96  00000000  00000000  00004882  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000414  00000000  00000000  00005818  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000053a  00000000  00000000  00005c2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e98  00000000  00000000  00006166  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00006ffe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  10:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  14:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  18:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  1c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  20:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  24:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  28:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  2c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  30:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  34:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  38:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  3c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  40:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  44:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  48:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  4c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  50:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  54:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  58:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  5c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  60:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  64:	0c 94 32 01 	jmp	0x264	; 0x264 <__vector_25>
  68:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  6c:	0c 94 03 01 	jmp	0x206	; 0x206 <__vector_27>
  70:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  74:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  78:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  7c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  80:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  84:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  88:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  8c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  90:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  94:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  98:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  9c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  ac:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  bc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  cc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  dc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  e0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e4 ea       	ldi	r30, 0xA4	; 164
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 37       	cpi	r26, 0x70	; 112
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	1b be       	out	0x3b, r1	; 59

00000110 <__do_clear_bss>:
 110:	13 e0       	ldi	r17, 0x03	; 3
 112:	a0 e7       	ldi	r26, 0x70	; 112
 114:	b2 e0       	ldi	r27, 0x02	; 2
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	a1 30       	cpi	r26, 0x01	; 1
 11c:	b1 07       	cpc	r27, r17
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>
 120:	0e 94 55 02 	call	0x4aa	; 0x4aa <main>
 124:	0c 94 50 06 	jmp	0xca0	; 0xca0 <_exit>

00000128 <__bad_interrupt>:
 128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012c <uart_getchar>:
	return (1);
}
int uart_getchar(FILE * stream){
	char ch;
	do{
		cli();
 12c:	f8 94       	cli
		ch=qi_delete();
 12e:	0e 94 b9 01 	call	0x372	; 0x372 <qi_delete>
		sei();
 132:	78 94       	sei
	}while (ch==0);
 134:	88 23       	and	r24, r24
 136:	d1 f3       	breq	.-12     	; 0x12c <uart_getchar>

	if (ch==EOT)return (-1);
 138:	84 30       	cpi	r24, 0x04	; 4
 13a:	11 f0       	breq	.+4      	; 0x140 <uart_getchar+0x14>
	else return (ch);
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	08 95       	ret
		cli();
		ch=qi_delete();
		sei();
	}while (ch==0);

	if (ch==EOT)return (-1);
 140:	8f ef       	ldi	r24, 0xFF	; 255
 142:	9f ef       	ldi	r25, 0xFF	; 255
	else return (ch);
}
 144:	08 95       	ret

00000146 <uart_putchar>:
	sbi(UCSR0B,TXEN0);
	sbi(UCSR0B,TXCIE0);
	sbi(UCSR0B,RXEN0);
	sbi(UCSR0B,RXCIE0);
}
int uart_putchar(char ch, FILE * stream){
 146:	cf 93       	push	r28
 148:	c8 2f       	mov	r28, r24
	if (ch=='\n')uart_putchar('\r',stream);
 14a:	8a 30       	cpi	r24, 0x0A	; 10
 14c:	19 f4       	brne	.+6      	; 0x154 <uart_putchar+0xe>
 14e:	8d e0       	ldi	r24, 0x0D	; 13
 150:	0e 94 a3 00 	call	0x146	; 0x146 <uart_putchar>
	cli();
 154:	f8 94       	cli
	if(!uart_busy){
 156:	80 91 72 02 	lds	r24, 0x0272
 15a:	88 23       	and	r24, r24
 15c:	59 f4       	brne	.+22     	; 0x174 <uart_putchar+0x2e>
		UDR0=ch;
 15e:	c0 93 c6 00 	sts	0x00C6, r28
		uart_busy=1;
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	80 93 72 02 	sts	0x0272, r24
 168:	0a c0       	rjmp	.+20     	; 0x17e <uart_putchar+0x38>
	}
	else{
		while(qo_insert(ch)==0){
			sei();
 16a:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 16c:	86 ef       	ldi	r24, 0xF6	; 246
 16e:	8a 95       	dec	r24
 170:	f1 f7       	brne	.-4      	; 0x16e <uart_putchar+0x28>
			_delay_us(100);
			cli();
 172:	f8 94       	cli
	if(!uart_busy){
		UDR0=ch;
		uart_busy=1;
	}
	else{
		while(qo_insert(ch)==0){
 174:	8c 2f       	mov	r24, r28
 176:	0e 94 97 01 	call	0x32e	; 0x32e <qo_insert>
 17a:	00 97       	sbiw	r24, 0x00	; 0
 17c:	b1 f3       	breq	.-20     	; 0x16a <uart_putchar+0x24>
			sei();
			_delay_us(100);
			cli();
		}
	}
	sei();
 17e:	78 94       	sei
	return (1);
}
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	cf 91       	pop	r28
 186:	08 95       	ret

00000188 <uart_init>:
#define EOT 0x04
FILE Mystdout = FDEV_SETUP_STREAM(uart_putchar,NULL,_FDEV_SETUP_WRITE);
FILE Mystdin = FDEV_SETUP_STREAM(NULL,uart_getchar,_FDEV_SETUP_READ);
char uart_busy;
void uart_init(void){
	stdout=&Mystdout;
 188:	81 e4       	ldi	r24, 0x41	; 65
 18a:	92 e0       	ldi	r25, 0x02	; 2
 18c:	90 93 fe 02 	sts	0x02FE, r25
 190:	80 93 fd 02 	sts	0x02FD, r24
	stdin=&Mystdin;
 194:	83 e3       	ldi	r24, 0x33	; 51
 196:	92 e0       	ldi	r25, 0x02	; 2
 198:	90 93 fc 02 	sts	0x02FC, r25
 19c:	80 93 fb 02 	sts	0x02FB, r24
	qi_init();
 1a0:	0e 94 64 01 	call	0x2c8	; 0x2c8 <qi_init>
	uart_busy=0;
 1a4:	10 92 72 02 	sts	0x0272, r1
	UBRR0H=0x00;UBRR0L=0x07;
 1a8:	10 92 c5 00 	sts	0x00C5, r1
 1ac:	87 e0       	ldi	r24, 0x07	; 7
 1ae:	80 93 c4 00 	sts	0x00C4, r24
	sbi(UCSR0A,U2X0);
 1b2:	e0 ec       	ldi	r30, 0xC0	; 192
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	80 81       	ld	r24, Z
 1b8:	82 60       	ori	r24, 0x02	; 2
 1ba:	80 83       	st	Z, r24
	sbi(UCSR0B,TXEN0);
 1bc:	e1 ec       	ldi	r30, 0xC1	; 193
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	88 60       	ori	r24, 0x08	; 8
 1c4:	80 83       	st	Z, r24
	sbi(UCSR0B,TXCIE0);
 1c6:	80 81       	ld	r24, Z
 1c8:	80 64       	ori	r24, 0x40	; 64
 1ca:	80 83       	st	Z, r24
	sbi(UCSR0B,RXEN0);
 1cc:	80 81       	ld	r24, Z
 1ce:	80 61       	ori	r24, 0x10	; 16
 1d0:	80 83       	st	Z, r24
	sbi(UCSR0B,RXCIE0);
 1d2:	80 81       	ld	r24, Z
 1d4:	80 68       	ori	r24, 0x80	; 128
 1d6:	80 83       	st	Z, r24
}
 1d8:	08 95       	ret

000001da <uart_echo>:

	if (ch==EOT)return (-1);
	else return (ch);
}

void uart_echo(char ch){
 1da:	cf 93       	push	r28
 1dc:	c8 2f       	mov	r28, r24
	if(ch=='\n')uart_echo('\r');
 1de:	8a 30       	cpi	r24, 0x0A	; 10
 1e0:	19 f4       	brne	.+6      	; 0x1e8 <uart_echo+0xe>
 1e2:	8d e0       	ldi	r24, 0x0D	; 13
 1e4:	0e 94 ed 00 	call	0x1da	; 0x1da <uart_echo>
	if(!uart_busy){
 1e8:	80 91 72 02 	lds	r24, 0x0272
 1ec:	88 23       	and	r24, r24
 1ee:	31 f4       	brne	.+12     	; 0x1fc <uart_echo+0x22>
		UDR0=ch;
 1f0:	c0 93 c6 00 	sts	0x00C6, r28
		uart_busy=1;
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	80 93 72 02 	sts	0x0272, r24
 1fa:	03 c0       	rjmp	.+6      	; 0x202 <uart_echo+0x28>
	}else{
		qo_insert(ch);
 1fc:	8c 2f       	mov	r24, r28
 1fe:	0e 94 97 01 	call	0x32e	; 0x32e <qo_insert>
	}
}
 202:	cf 91       	pop	r28
 204:	08 95       	ret

00000206 <__vector_27>:
ISR(USART0_TX_vect){
 206:	1f 92       	push	r1
 208:	0f 92       	push	r0
 20a:	0f b6       	in	r0, 0x3f	; 63
 20c:	0f 92       	push	r0
 20e:	0b b6       	in	r0, 0x3b	; 59
 210:	0f 92       	push	r0
 212:	11 24       	eor	r1, r1
 214:	2f 93       	push	r18
 216:	3f 93       	push	r19
 218:	4f 93       	push	r20
 21a:	5f 93       	push	r21
 21c:	6f 93       	push	r22
 21e:	7f 93       	push	r23
 220:	8f 93       	push	r24
 222:	9f 93       	push	r25
 224:	af 93       	push	r26
 226:	bf 93       	push	r27
 228:	ef 93       	push	r30
 22a:	ff 93       	push	r31
	char ch ;
	if((ch=qo_delete())==0)
 22c:	0e 94 d6 01 	call	0x3ac	; 0x3ac <qo_delete>
 230:	88 23       	and	r24, r24
 232:	19 f4       	brne	.+6      	; 0x23a <__vector_27+0x34>
		uart_busy=0;
 234:	10 92 72 02 	sts	0x0272, r1
 238:	02 c0       	rjmp	.+4      	; 0x23e <__vector_27+0x38>
	else
		UDR0=ch;	
 23a:	80 93 c6 00 	sts	0x00C6, r24
}
 23e:	ff 91       	pop	r31
 240:	ef 91       	pop	r30
 242:	bf 91       	pop	r27
 244:	af 91       	pop	r26
 246:	9f 91       	pop	r25
 248:	8f 91       	pop	r24
 24a:	7f 91       	pop	r23
 24c:	6f 91       	pop	r22
 24e:	5f 91       	pop	r21
 250:	4f 91       	pop	r20
 252:	3f 91       	pop	r19
 254:	2f 91       	pop	r18
 256:	0f 90       	pop	r0
 258:	0b be       	out	0x3b, r0	; 59
 25a:	0f 90       	pop	r0
 25c:	0f be       	out	0x3f, r0	; 63
 25e:	0f 90       	pop	r0
 260:	1f 90       	pop	r1
 262:	18 95       	reti

00000264 <__vector_25>:

ISR(USART0_RX_vect){
 264:	1f 92       	push	r1
 266:	0f 92       	push	r0
 268:	0f b6       	in	r0, 0x3f	; 63
 26a:	0f 92       	push	r0
 26c:	0b b6       	in	r0, 0x3b	; 59
 26e:	0f 92       	push	r0
 270:	11 24       	eor	r1, r1
 272:	2f 93       	push	r18
 274:	3f 93       	push	r19
 276:	4f 93       	push	r20
 278:	5f 93       	push	r21
 27a:	6f 93       	push	r22
 27c:	7f 93       	push	r23
 27e:	8f 93       	push	r24
 280:	9f 93       	push	r25
 282:	af 93       	push	r26
 284:	bf 93       	push	r27
 286:	cf 93       	push	r28
 288:	ef 93       	push	r30
 28a:	ff 93       	push	r31
	char ch;
	ch=UDR0;
 28c:	c0 91 c6 00 	lds	r28, 0x00C6
	if(ch!=EOT){
 290:	c4 30       	cpi	r28, 0x04	; 4
 292:	19 f0       	breq	.+6      	; 0x29a <__vector_25+0x36>
		if(ch=='\n')ch='\n';
		uart_echo(ch);
 294:	8c 2f       	mov	r24, r28
 296:	0e 94 ed 00 	call	0x1da	; 0x1da <uart_echo>
	}	
	qi_insert(ch);
 29a:	8c 2f       	mov	r24, r28
 29c:	0e 94 75 01 	call	0x2ea	; 0x2ea <qi_insert>
}
 2a0:	ff 91       	pop	r31
 2a2:	ef 91       	pop	r30
 2a4:	cf 91       	pop	r28
 2a6:	bf 91       	pop	r27
 2a8:	af 91       	pop	r26
 2aa:	9f 91       	pop	r25
 2ac:	8f 91       	pop	r24
 2ae:	7f 91       	pop	r23
 2b0:	6f 91       	pop	r22
 2b2:	5f 91       	pop	r21
 2b4:	4f 91       	pop	r20
 2b6:	3f 91       	pop	r19
 2b8:	2f 91       	pop	r18
 2ba:	0f 90       	pop	r0
 2bc:	0b be       	out	0x3b, r0	; 59
 2be:	0f 90       	pop	r0
 2c0:	0f be       	out	0x3f, r0	; 63
 2c2:	0f 90       	pop	r0
 2c4:	1f 90       	pop	r1
 2c6:	18 95       	reti

000002c8 <qi_init>:
#define QO_SIZE 64
#define QI_SIZE 64
char qi[QI_SIZE],qo[QO_SIZE];
int fi,ri,fo,ro;
void qi_init(){
	fi=ri=fo=ro=0;
 2c8:	10 92 b8 02 	sts	0x02B8, r1
 2cc:	10 92 b7 02 	sts	0x02B7, r1
 2d0:	10 92 b6 02 	sts	0x02B6, r1
 2d4:	10 92 b5 02 	sts	0x02B5, r1
 2d8:	10 92 ba 02 	sts	0x02BA, r1
 2dc:	10 92 b9 02 	sts	0x02B9, r1
 2e0:	10 92 74 02 	sts	0x0274, r1
 2e4:	10 92 73 02 	sts	0x0273, r1
}
 2e8:	08 95       	ret

000002ea <qi_insert>:
int qi_insert(char ch){
 2ea:	48 2f       	mov	r20, r24
	if((ri+1)%QI_SIZE==fi){
 2ec:	20 91 b9 02 	lds	r18, 0x02B9
 2f0:	30 91 ba 02 	lds	r19, 0x02BA
 2f4:	2f 5f       	subi	r18, 0xFF	; 255
 2f6:	3f 4f       	sbci	r19, 0xFF	; 255
 2f8:	c9 01       	movw	r24, r18
 2fa:	60 e4       	ldi	r22, 0x40	; 64
 2fc:	70 e0       	ldi	r23, 0x00	; 0
 2fe:	0e 94 92 02 	call	0x524	; 0x524 <__divmodhi4>
 302:	9c 01       	movw	r18, r24
 304:	80 91 73 02 	lds	r24, 0x0273
 308:	90 91 74 02 	lds	r25, 0x0274
 30c:	28 17       	cp	r18, r24
 30e:	39 07       	cpc	r19, r25
 310:	59 f0       	breq	.+22     	; 0x328 <qi_insert+0x3e>
		return(0);
	}
	ri=(ri+1)%QI_SIZE;
 312:	30 93 ba 02 	sts	0x02BA, r19
 316:	20 93 b9 02 	sts	0x02B9, r18
	qi[ri]=ch;
 31a:	25 54       	subi	r18, 0x45	; 69
 31c:	3d 4f       	sbci	r19, 0xFD	; 253
 31e:	f9 01       	movw	r30, r18
 320:	40 83       	st	Z, r20
	return(1);
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	08 95       	ret
void qi_init(){
	fi=ri=fo=ro=0;
}
int qi_insert(char ch){
	if((ri+1)%QI_SIZE==fi){
		return(0);
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	90 e0       	ldi	r25, 0x00	; 0
	}
	ri=(ri+1)%QI_SIZE;
	qi[ri]=ch;
	return(1);
	
}
 32c:	08 95       	ret

0000032e <qo_insert>:
int qo_insert(char ch){
 32e:	48 2f       	mov	r20, r24
	if((ro+1)%QO_SIZE==fo){
 330:	20 91 b7 02 	lds	r18, 0x02B7
 334:	30 91 b8 02 	lds	r19, 0x02B8
 338:	2f 5f       	subi	r18, 0xFF	; 255
 33a:	3f 4f       	sbci	r19, 0xFF	; 255
 33c:	c9 01       	movw	r24, r18
 33e:	60 e4       	ldi	r22, 0x40	; 64
 340:	70 e0       	ldi	r23, 0x00	; 0
 342:	0e 94 92 02 	call	0x524	; 0x524 <__divmodhi4>
 346:	9c 01       	movw	r18, r24
 348:	80 91 b5 02 	lds	r24, 0x02B5
 34c:	90 91 b6 02 	lds	r25, 0x02B6
 350:	28 17       	cp	r18, r24
 352:	39 07       	cpc	r19, r25
 354:	59 f0       	breq	.+22     	; 0x36c <qo_insert+0x3e>
		return(0);
	}
	ro=(ro+1)%QO_SIZE;
 356:	30 93 b8 02 	sts	0x02B8, r19
 35a:	20 93 b7 02 	sts	0x02B7, r18
	qo[ro]=ch;
 35e:	2b 58       	subi	r18, 0x8B	; 139
 360:	3d 4f       	sbci	r19, 0xFD	; 253
 362:	f9 01       	movw	r30, r18
 364:	40 83       	st	Z, r20
	return(1);
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	90 e0       	ldi	r25, 0x00	; 0
 36a:	08 95       	ret
	return(1);
	
}
int qo_insert(char ch){
	if((ro+1)%QO_SIZE==fo){
		return(0);
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	90 e0       	ldi	r25, 0x00	; 0
	}
	ro=(ro+1)%QO_SIZE;
	qo[ro]=ch;
	return(1);
	
}
 370:	08 95       	ret

00000372 <qi_delete>:
int qi_delete(){
	if(ri==fi)
 372:	80 91 73 02 	lds	r24, 0x0273
 376:	90 91 74 02 	lds	r25, 0x0274
 37a:	20 91 b9 02 	lds	r18, 0x02B9
 37e:	30 91 ba 02 	lds	r19, 0x02BA
 382:	28 17       	cp	r18, r24
 384:	39 07       	cpc	r19, r25
 386:	79 f0       	breq	.+30     	; 0x3a6 <qi_delete+0x34>
		return 0;
	fi=(fi+1)%QI_SIZE;
 388:	01 96       	adiw	r24, 0x01	; 1
 38a:	60 e4       	ldi	r22, 0x40	; 64
 38c:	70 e0       	ldi	r23, 0x00	; 0
 38e:	0e 94 92 02 	call	0x524	; 0x524 <__divmodhi4>
 392:	90 93 74 02 	sts	0x0274, r25
 396:	80 93 73 02 	sts	0x0273, r24
	return(qi[fi]);
 39a:	85 54       	subi	r24, 0x45	; 69
 39c:	9d 4f       	sbci	r25, 0xFD	; 253
 39e:	fc 01       	movw	r30, r24
 3a0:	80 81       	ld	r24, Z
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	08 95       	ret
	return(1);
	
}
int qi_delete(){
	if(ri==fi)
		return 0;
 3a6:	80 e0       	ldi	r24, 0x00	; 0
 3a8:	90 e0       	ldi	r25, 0x00	; 0
	fi=(fi+1)%QI_SIZE;
	return(qi[fi]);
}
 3aa:	08 95       	ret

000003ac <qo_delete>:
int qo_delete(){
	if(ro==fo)
 3ac:	80 91 b5 02 	lds	r24, 0x02B5
 3b0:	90 91 b6 02 	lds	r25, 0x02B6
 3b4:	20 91 b7 02 	lds	r18, 0x02B7
 3b8:	30 91 b8 02 	lds	r19, 0x02B8
 3bc:	28 17       	cp	r18, r24
 3be:	39 07       	cpc	r19, r25
 3c0:	79 f0       	breq	.+30     	; 0x3e0 <qo_delete+0x34>
		return 0;
	fo=(fo+1)%QO_SIZE;
 3c2:	01 96       	adiw	r24, 0x01	; 1
 3c4:	60 e4       	ldi	r22, 0x40	; 64
 3c6:	70 e0       	ldi	r23, 0x00	; 0
 3c8:	0e 94 92 02 	call	0x524	; 0x524 <__divmodhi4>
 3cc:	90 93 b6 02 	sts	0x02B6, r25
 3d0:	80 93 b5 02 	sts	0x02B5, r24
	return(qo[fo]);
 3d4:	8b 58       	subi	r24, 0x8B	; 139
 3d6:	9d 4f       	sbci	r25, 0xFD	; 253
 3d8:	fc 01       	movw	r30, r24
 3da:	80 81       	ld	r24, Z
 3dc:	90 e0       	ldi	r25, 0x00	; 0
 3de:	08 95       	ret
	fi=(fi+1)%QI_SIZE;
	return(qi[fi]);
}
int qo_delete(){
	if(ro==fo)
		return 0;
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	90 e0       	ldi	r25, 0x00	; 0
	fo=(fo+1)%QO_SIZE;
	return(qo[fo]);
}
 3e4:	08 95       	ret

000003e6 <is_prime>:
#include <stdio.h>
int is_prime(int n){
 3e6:	cf 93       	push	r28
 3e8:	df 93       	push	r29
 3ea:	fc 01       	movw	r30, r24
		int i;
		for (i=2;i<=n/2;i++){
 3ec:	62 e0       	ldi	r22, 0x02	; 2
 3ee:	70 e0       	ldi	r23, 0x00	; 0
 3f0:	0e 94 92 02 	call	0x524	; 0x524 <__divmodhi4>
 3f4:	eb 01       	movw	r28, r22
 3f6:	22 e0       	ldi	r18, 0x02	; 2
 3f8:	30 e0       	ldi	r19, 0x00	; 0
 3fa:	08 c0       	rjmp	.+16     	; 0x40c <is_prime+0x26>
			if((n%i)==0)return(0);	
 3fc:	cf 01       	movw	r24, r30
 3fe:	b9 01       	movw	r22, r18
 400:	0e 94 92 02 	call	0x524	; 0x524 <__divmodhi4>
 404:	00 97       	sbiw	r24, 0x00	; 0
 406:	41 f0       	breq	.+16     	; 0x418 <is_prime+0x32>
#include <stdio.h>
int is_prime(int n){
		int i;
		for (i=2;i<=n/2;i++){
 408:	2f 5f       	subi	r18, 0xFF	; 255
 40a:	3f 4f       	sbci	r19, 0xFF	; 255
 40c:	c2 17       	cp	r28, r18
 40e:	d3 07       	cpc	r29, r19
 410:	ac f7       	brge	.-22     	; 0x3fc <is_prime+0x16>
			if((n%i)==0)return(0);	
		}
		return(1);
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	02 c0       	rjmp	.+4      	; 0x41c <is_prime+0x36>
#include <stdio.h>
int is_prime(int n){
		int i;
		for (i=2;i<=n/2;i++){
			if((n%i)==0)return(0);	
 418:	80 e0       	ldi	r24, 0x00	; 0
 41a:	90 e0       	ldi	r25, 0x00	; 0
		}
		return(1);
}
 41c:	df 91       	pop	r29
 41e:	cf 91       	pop	r28
 420:	08 95       	ret

00000422 <app_prime>:
void app_prime(int t){
 422:	cf 92       	push	r12
 424:	df 92       	push	r13
 426:	ef 92       	push	r14
 428:	ff 92       	push	r15
 42a:	0f 93       	push	r16
 42c:	1f 93       	push	r17
 42e:	cf 93       	push	r28
 430:	df 93       	push	r29
 432:	7c 01       	movw	r14, r24
	int n, count=0;
 434:	00 e0       	ldi	r16, 0x00	; 0
 436:	10 e0       	ldi	r17, 0x00	; 0
	for(n=2;n<=t;n++){
 438:	c2 e0       	ldi	r28, 0x02	; 2
 43a:	d0 e0       	ldi	r29, 0x00	; 0
	if(is_prime(n)){
			count++;
			printf("%d is a prime number\n",n);
 43c:	2f e4       	ldi	r18, 0x4F	; 79
 43e:	c2 2e       	mov	r12, r18
 440:	22 e0       	ldi	r18, 0x02	; 2
 442:	d2 2e       	mov	r13, r18
		}
		return(1);
}
void app_prime(int t){
	int n, count=0;
	for(n=2;n<=t;n++){
 444:	16 c0       	rjmp	.+44     	; 0x472 <app_prime+0x50>
	if(is_prime(n)){
 446:	ce 01       	movw	r24, r28
 448:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <is_prime>
 44c:	00 97       	sbiw	r24, 0x00	; 0
 44e:	81 f0       	breq	.+32     	; 0x470 <app_prime+0x4e>
			count++;
 450:	0f 5f       	subi	r16, 0xFF	; 255
 452:	1f 4f       	sbci	r17, 0xFF	; 255
			printf("%d is a prime number\n",n);
 454:	00 d0       	rcall	.+0      	; 0x456 <app_prime+0x34>
 456:	0f 92       	push	r0
 458:	ed b7       	in	r30, 0x3d	; 61
 45a:	fe b7       	in	r31, 0x3e	; 62
 45c:	d2 82       	std	Z+2, r13	; 0x02
 45e:	c1 82       	std	Z+1, r12	; 0x01
 460:	d4 83       	std	Z+4, r29	; 0x04
 462:	c3 83       	std	Z+3, r28	; 0x03
 464:	0e 94 22 03 	call	0x644	; 0x644 <printf>
 468:	0f 90       	pop	r0
 46a:	0f 90       	pop	r0
 46c:	0f 90       	pop	r0
 46e:	0f 90       	pop	r0
		}
		return(1);
}
void app_prime(int t){
	int n, count=0;
	for(n=2;n<=t;n++){
 470:	21 96       	adiw	r28, 0x01	; 1
 472:	ec 16       	cp	r14, r28
 474:	fd 06       	cpc	r15, r29
 476:	3c f7       	brge	.-50     	; 0x446 <app_prime+0x24>
	if(is_prime(n)){
			count++;
			printf("%d is a prime number\n",n);
		}
	}
	printf("count=%d\n",count);
 478:	00 d0       	rcall	.+0      	; 0x47a <app_prime+0x58>
 47a:	0f 92       	push	r0
 47c:	85 e6       	ldi	r24, 0x65	; 101
 47e:	92 e0       	ldi	r25, 0x02	; 2
 480:	ed b7       	in	r30, 0x3d	; 61
 482:	fe b7       	in	r31, 0x3e	; 62
 484:	92 83       	std	Z+2, r25	; 0x02
 486:	81 83       	std	Z+1, r24	; 0x01
 488:	14 83       	std	Z+4, r17	; 0x04
 48a:	03 83       	std	Z+3, r16	; 0x03
 48c:	0e 94 22 03 	call	0x644	; 0x644 <printf>
 490:	0f 90       	pop	r0
 492:	0f 90       	pop	r0
 494:	0f 90       	pop	r0
 496:	0f 90       	pop	r0
}
 498:	df 91       	pop	r29
 49a:	cf 91       	pop	r28
 49c:	1f 91       	pop	r17
 49e:	0f 91       	pop	r16
 4a0:	ff 90       	pop	r15
 4a2:	ef 90       	pop	r14
 4a4:	df 90       	pop	r13
 4a6:	cf 90       	pop	r12
 4a8:	08 95       	ret

000004aa <main>:
#include <stdlib.h>
#include <string.h>
#include "uart.h"
#include "Circular_Queue.h"
#include "prime.h"
int main(){
 4aa:	cf 93       	push	r28
 4ac:	df 93       	push	r29
 4ae:	cd b7       	in	r28, 0x3d	; 61
 4b0:	de b7       	in	r29, 0x3e	; 62
 4b2:	c0 58       	subi	r28, 0x80	; 128
 4b4:	d0 40       	sbci	r29, 0x00	; 0
 4b6:	0f b6       	in	r0, 0x3f	; 63
 4b8:	f8 94       	cli
 4ba:	de bf       	out	0x3e, r29	; 62
 4bc:	0f be       	out	0x3f, r0	; 63
 4be:	cd bf       	out	0x3d, r28	; 61
	char cmd[128],*cp;
	uart_init();
 4c0:	0e 94 c4 00 	call	0x188	; 0x188 <uart_init>
	sei();
 4c4:	78 94       	sei
	while(1){
		printf("$");
 4c6:	84 e2       	ldi	r24, 0x24	; 36
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	0e 94 34 03 	call	0x668	; 0x668 <putchar>
		if(fgets(cmd, sizeof(cmd),stdin)==NULL)
 4ce:	40 91 fb 02 	lds	r20, 0x02FB
 4d2:	50 91 fc 02 	lds	r21, 0x02FC
 4d6:	ce 01       	movw	r24, r28
 4d8:	01 96       	adiw	r24, 0x01	; 1
 4da:	60 e8       	ldi	r22, 0x80	; 128
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	0e 94 ee 02 	call	0x5dc	; 0x5dc <fgets>
 4e2:	00 97       	sbiw	r24, 0x00	; 0
 4e4:	d1 f0       	breq	.+52     	; 0x51a <main+0x70>
			break;
		if((cp=strtok(cmd,"\n\r\t "))==NULL) continue;
 4e6:	ce 01       	movw	r24, r28
 4e8:	01 96       	adiw	r24, 0x01	; 1
 4ea:	60 e0       	ldi	r22, 0x00	; 0
 4ec:	72 e0       	ldi	r23, 0x02	; 2
 4ee:	0e 94 b9 02 	call	0x572	; 0x572 <strtok>
 4f2:	00 97       	sbiw	r24, 0x00	; 0
 4f4:	41 f3       	breq	.-48     	; 0x4c6 <main+0x1c>
		if(!strcmp(cmd, "prime")) app_prime(2000);
 4f6:	ce 01       	movw	r24, r28
 4f8:	01 96       	adiw	r24, 0x01	; 1
 4fa:	65 e0       	ldi	r22, 0x05	; 5
 4fc:	72 e0       	ldi	r23, 0x02	; 2
 4fe:	0e 94 be 02 	call	0x57c	; 0x57c <strcmp>
 502:	00 97       	sbiw	r24, 0x00	; 0
 504:	29 f4       	brne	.+10     	; 0x510 <main+0x66>
 506:	80 ed       	ldi	r24, 0xD0	; 208
 508:	97 e0       	ldi	r25, 0x07	; 7
 50a:	0e 94 11 02 	call	0x422	; 0x422 <app_prime>
 50e:	db cf       	rjmp	.-74     	; 0x4c6 <main+0x1c>
		else printf("Unknwon command...\n");
 510:	8b e0       	ldi	r24, 0x0B	; 11
 512:	92 e0       	ldi	r25, 0x02	; 2
 514:	0e 94 3b 03 	call	0x676	; 0x676 <puts>
 518:	d6 cf       	rjmp	.-84     	; 0x4c6 <main+0x1c>
	}
	printf("logout, good bye !!!\n");
 51a:	8e e1       	ldi	r24, 0x1E	; 30
 51c:	92 e0       	ldi	r25, 0x02	; 2
 51e:	0e 94 3b 03 	call	0x676	; 0x676 <puts>
 522:	ff cf       	rjmp	.-2      	; 0x522 <main+0x78>

00000524 <__divmodhi4>:
 524:	97 fb       	bst	r25, 7
 526:	09 2e       	mov	r0, r25
 528:	07 26       	eor	r0, r23
 52a:	0a d0       	rcall	.+20     	; 0x540 <__divmodhi4_neg1>
 52c:	77 fd       	sbrc	r23, 7
 52e:	04 d0       	rcall	.+8      	; 0x538 <__divmodhi4_neg2>
 530:	0c d0       	rcall	.+24     	; 0x54a <__udivmodhi4>
 532:	06 d0       	rcall	.+12     	; 0x540 <__divmodhi4_neg1>
 534:	00 20       	and	r0, r0
 536:	1a f4       	brpl	.+6      	; 0x53e <__divmodhi4_exit>

00000538 <__divmodhi4_neg2>:
 538:	70 95       	com	r23
 53a:	61 95       	neg	r22
 53c:	7f 4f       	sbci	r23, 0xFF	; 255

0000053e <__divmodhi4_exit>:
 53e:	08 95       	ret

00000540 <__divmodhi4_neg1>:
 540:	f6 f7       	brtc	.-4      	; 0x53e <__divmodhi4_exit>
 542:	90 95       	com	r25
 544:	81 95       	neg	r24
 546:	9f 4f       	sbci	r25, 0xFF	; 255
 548:	08 95       	ret

0000054a <__udivmodhi4>:
 54a:	aa 1b       	sub	r26, r26
 54c:	bb 1b       	sub	r27, r27
 54e:	51 e1       	ldi	r21, 0x11	; 17
 550:	07 c0       	rjmp	.+14     	; 0x560 <__udivmodhi4_ep>

00000552 <__udivmodhi4_loop>:
 552:	aa 1f       	adc	r26, r26
 554:	bb 1f       	adc	r27, r27
 556:	a6 17       	cp	r26, r22
 558:	b7 07       	cpc	r27, r23
 55a:	10 f0       	brcs	.+4      	; 0x560 <__udivmodhi4_ep>
 55c:	a6 1b       	sub	r26, r22
 55e:	b7 0b       	sbc	r27, r23

00000560 <__udivmodhi4_ep>:
 560:	88 1f       	adc	r24, r24
 562:	99 1f       	adc	r25, r25
 564:	5a 95       	dec	r21
 566:	a9 f7       	brne	.-22     	; 0x552 <__udivmodhi4_loop>
 568:	80 95       	com	r24
 56a:	90 95       	com	r25
 56c:	bc 01       	movw	r22, r24
 56e:	cd 01       	movw	r24, r26
 570:	08 95       	ret

00000572 <strtok>:
 572:	40 e7       	ldi	r20, 0x70	; 112
 574:	52 e0       	ldi	r21, 0x02	; 2
 576:	0e 94 c7 02 	call	0x58e	; 0x58e <strtok_r>
 57a:	08 95       	ret

0000057c <strcmp>:
 57c:	fb 01       	movw	r30, r22
 57e:	dc 01       	movw	r26, r24
 580:	8d 91       	ld	r24, X+
 582:	01 90       	ld	r0, Z+
 584:	80 19       	sub	r24, r0
 586:	01 10       	cpse	r0, r1
 588:	d9 f3       	breq	.-10     	; 0x580 <strcmp+0x4>
 58a:	99 0b       	sbc	r25, r25
 58c:	08 95       	ret

0000058e <strtok_r>:
 58e:	fa 01       	movw	r30, r20
 590:	a1 91       	ld	r26, Z+
 592:	b0 81       	ld	r27, Z
 594:	00 97       	sbiw	r24, 0x00	; 0
 596:	19 f4       	brne	.+6      	; 0x59e <strtok_r+0x10>
 598:	10 97       	sbiw	r26, 0x00	; 0
 59a:	e1 f0       	breq	.+56     	; 0x5d4 <strtok_r+0x46>
 59c:	cd 01       	movw	r24, r26
 59e:	dc 01       	movw	r26, r24
 5a0:	cd 01       	movw	r24, r26
 5a2:	0d 90       	ld	r0, X+
 5a4:	00 20       	and	r0, r0
 5a6:	11 f4       	brne	.+4      	; 0x5ac <strtok_r+0x1e>
 5a8:	c0 01       	movw	r24, r0
 5aa:	13 c0       	rjmp	.+38     	; 0x5d2 <strtok_r+0x44>
 5ac:	fb 01       	movw	r30, r22
 5ae:	21 91       	ld	r18, Z+
 5b0:	22 23       	and	r18, r18
 5b2:	19 f0       	breq	.+6      	; 0x5ba <strtok_r+0x2c>
 5b4:	20 15       	cp	r18, r0
 5b6:	d9 f7       	brne	.-10     	; 0x5ae <strtok_r+0x20>
 5b8:	f3 cf       	rjmp	.-26     	; 0x5a0 <strtok_r+0x12>
 5ba:	fb 01       	movw	r30, r22
 5bc:	21 91       	ld	r18, Z+
 5be:	20 15       	cp	r18, r0
 5c0:	19 f4       	brne	.+6      	; 0x5c8 <strtok_r+0x3a>
 5c2:	1e 92       	st	-X, r1
 5c4:	11 96       	adiw	r26, 0x01	; 1
 5c6:	06 c0       	rjmp	.+12     	; 0x5d4 <strtok_r+0x46>
 5c8:	22 23       	and	r18, r18
 5ca:	c1 f7       	brne	.-16     	; 0x5bc <strtok_r+0x2e>
 5cc:	0d 90       	ld	r0, X+
 5ce:	00 20       	and	r0, r0
 5d0:	a1 f7       	brne	.-24     	; 0x5ba <strtok_r+0x2c>
 5d2:	d0 01       	movw	r26, r0
 5d4:	fa 01       	movw	r30, r20
 5d6:	a1 93       	st	Z+, r26
 5d8:	b0 83       	st	Z, r27
 5da:	08 95       	ret

000005dc <fgets>:
 5dc:	cf 92       	push	r12
 5de:	df 92       	push	r13
 5e0:	ef 92       	push	r14
 5e2:	ff 92       	push	r15
 5e4:	0f 93       	push	r16
 5e6:	1f 93       	push	r17
 5e8:	cf 93       	push	r28
 5ea:	df 93       	push	r29
 5ec:	8c 01       	movw	r16, r24
 5ee:	6a 01       	movw	r12, r20
 5f0:	fa 01       	movw	r30, r20
 5f2:	83 81       	ldd	r24, Z+3	; 0x03
 5f4:	80 ff       	sbrs	r24, 0
 5f6:	1a c0       	rjmp	.+52     	; 0x62c <fgets+0x50>
 5f8:	16 16       	cp	r1, r22
 5fa:	17 06       	cpc	r1, r23
 5fc:	bc f4       	brge	.+46     	; 0x62c <fgets+0x50>
 5fe:	7b 01       	movw	r14, r22
 600:	e8 01       	movw	r28, r16
 602:	0e c0       	rjmp	.+28     	; 0x620 <fgets+0x44>
 604:	c6 01       	movw	r24, r12
 606:	0e 94 86 05 	call	0xb0c	; 0xb0c <fgetc>
 60a:	ff ef       	ldi	r31, 0xFF	; 255
 60c:	8f 3f       	cpi	r24, 0xFF	; 255
 60e:	9f 07       	cpc	r25, r31
 610:	69 f0       	breq	.+26     	; 0x62c <fgets+0x50>
 612:	89 93       	st	Y+, r24
 614:	08 94       	sec
 616:	e1 08       	sbc	r14, r1
 618:	f1 08       	sbc	r15, r1
 61a:	8a 30       	cpi	r24, 0x0A	; 10
 61c:	91 05       	cpc	r25, r1
 61e:	21 f0       	breq	.+8      	; 0x628 <fgets+0x4c>
 620:	21 e0       	ldi	r18, 0x01	; 1
 622:	e2 16       	cp	r14, r18
 624:	f1 04       	cpc	r15, r1
 626:	71 f7       	brne	.-36     	; 0x604 <fgets+0x28>
 628:	18 82       	st	Y, r1
 62a:	02 c0       	rjmp	.+4      	; 0x630 <fgets+0x54>
 62c:	00 e0       	ldi	r16, 0x00	; 0
 62e:	10 e0       	ldi	r17, 0x00	; 0
 630:	c8 01       	movw	r24, r16
 632:	df 91       	pop	r29
 634:	cf 91       	pop	r28
 636:	1f 91       	pop	r17
 638:	0f 91       	pop	r16
 63a:	ff 90       	pop	r15
 63c:	ef 90       	pop	r14
 63e:	df 90       	pop	r13
 640:	cf 90       	pop	r12
 642:	08 95       	ret

00000644 <printf>:
 644:	cf 93       	push	r28
 646:	df 93       	push	r29
 648:	cd b7       	in	r28, 0x3d	; 61
 64a:	de b7       	in	r29, 0x3e	; 62
 64c:	fe 01       	movw	r30, r28
 64e:	36 96       	adiw	r30, 0x06	; 6
 650:	61 91       	ld	r22, Z+
 652:	71 91       	ld	r23, Z+
 654:	80 91 fd 02 	lds	r24, 0x02FD
 658:	90 91 fe 02 	lds	r25, 0x02FE
 65c:	af 01       	movw	r20, r30
 65e:	0e 94 69 03 	call	0x6d2	; 0x6d2 <vfprintf>
 662:	df 91       	pop	r29
 664:	cf 91       	pop	r28
 666:	08 95       	ret

00000668 <putchar>:
 668:	60 91 fd 02 	lds	r22, 0x02FD
 66c:	70 91 fe 02 	lds	r23, 0x02FE
 670:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 674:	08 95       	ret

00000676 <puts>:
 676:	0f 93       	push	r16
 678:	1f 93       	push	r17
 67a:	cf 93       	push	r28
 67c:	df 93       	push	r29
 67e:	8c 01       	movw	r16, r24
 680:	e0 91 fd 02 	lds	r30, 0x02FD
 684:	f0 91 fe 02 	lds	r31, 0x02FE
 688:	83 81       	ldd	r24, Z+3	; 0x03
 68a:	81 ff       	sbrs	r24, 1
 68c:	1a c0       	rjmp	.+52     	; 0x6c2 <puts+0x4c>
 68e:	c0 e0       	ldi	r28, 0x00	; 0
 690:	d0 e0       	ldi	r29, 0x00	; 0
 692:	05 c0       	rjmp	.+10     	; 0x69e <puts+0x28>
 694:	19 95       	eicall
 696:	00 97       	sbiw	r24, 0x00	; 0
 698:	11 f0       	breq	.+4      	; 0x69e <puts+0x28>
 69a:	cf ef       	ldi	r28, 0xFF	; 255
 69c:	df ef       	ldi	r29, 0xFF	; 255
 69e:	f8 01       	movw	r30, r16
 6a0:	81 91       	ld	r24, Z+
 6a2:	8f 01       	movw	r16, r30
 6a4:	60 91 fd 02 	lds	r22, 0x02FD
 6a8:	70 91 fe 02 	lds	r23, 0x02FE
 6ac:	db 01       	movw	r26, r22
 6ae:	18 96       	adiw	r26, 0x08	; 8
 6b0:	ed 91       	ld	r30, X+
 6b2:	fc 91       	ld	r31, X
 6b4:	19 97       	sbiw	r26, 0x09	; 9
 6b6:	88 23       	and	r24, r24
 6b8:	69 f7       	brne	.-38     	; 0x694 <puts+0x1e>
 6ba:	8a e0       	ldi	r24, 0x0A	; 10
 6bc:	19 95       	eicall
 6be:	00 97       	sbiw	r24, 0x00	; 0
 6c0:	11 f0       	breq	.+4      	; 0x6c6 <puts+0x50>
 6c2:	cf ef       	ldi	r28, 0xFF	; 255
 6c4:	df ef       	ldi	r29, 0xFF	; 255
 6c6:	ce 01       	movw	r24, r28
 6c8:	df 91       	pop	r29
 6ca:	cf 91       	pop	r28
 6cc:	1f 91       	pop	r17
 6ce:	0f 91       	pop	r16
 6d0:	08 95       	ret

000006d2 <vfprintf>:
 6d2:	2f 92       	push	r2
 6d4:	3f 92       	push	r3
 6d6:	4f 92       	push	r4
 6d8:	5f 92       	push	r5
 6da:	6f 92       	push	r6
 6dc:	7f 92       	push	r7
 6de:	8f 92       	push	r8
 6e0:	9f 92       	push	r9
 6e2:	af 92       	push	r10
 6e4:	bf 92       	push	r11
 6e6:	cf 92       	push	r12
 6e8:	df 92       	push	r13
 6ea:	ef 92       	push	r14
 6ec:	ff 92       	push	r15
 6ee:	0f 93       	push	r16
 6f0:	1f 93       	push	r17
 6f2:	cf 93       	push	r28
 6f4:	df 93       	push	r29
 6f6:	cd b7       	in	r28, 0x3d	; 61
 6f8:	de b7       	in	r29, 0x3e	; 62
 6fa:	2d 97       	sbiw	r28, 0x0d	; 13
 6fc:	0f b6       	in	r0, 0x3f	; 63
 6fe:	f8 94       	cli
 700:	de bf       	out	0x3e, r29	; 62
 702:	0f be       	out	0x3f, r0	; 63
 704:	cd bf       	out	0x3d, r28	; 61
 706:	3c 01       	movw	r6, r24
 708:	7d 87       	std	Y+13, r23	; 0x0d
 70a:	6c 87       	std	Y+12, r22	; 0x0c
 70c:	5a 01       	movw	r10, r20
 70e:	fc 01       	movw	r30, r24
 710:	17 82       	std	Z+7, r1	; 0x07
 712:	16 82       	std	Z+6, r1	; 0x06
 714:	83 81       	ldd	r24, Z+3	; 0x03
 716:	81 ff       	sbrs	r24, 1
 718:	c8 c1       	rjmp	.+912    	; 0xaaa <vfprintf+0x3d8>
 71a:	2e 01       	movw	r4, r28
 71c:	08 94       	sec
 71e:	41 1c       	adc	r4, r1
 720:	51 1c       	adc	r5, r1
 722:	f3 01       	movw	r30, r6
 724:	93 81       	ldd	r25, Z+3	; 0x03
 726:	ec 85       	ldd	r30, Y+12	; 0x0c
 728:	fd 85       	ldd	r31, Y+13	; 0x0d
 72a:	93 fd       	sbrc	r25, 3
 72c:	85 91       	lpm	r24, Z+
 72e:	93 ff       	sbrs	r25, 3
 730:	81 91       	ld	r24, Z+
 732:	fd 87       	std	Y+13, r31	; 0x0d
 734:	ec 87       	std	Y+12, r30	; 0x0c
 736:	88 23       	and	r24, r24
 738:	09 f4       	brne	.+2      	; 0x73c <vfprintf+0x6a>
 73a:	b3 c1       	rjmp	.+870    	; 0xaa2 <vfprintf+0x3d0>
 73c:	85 32       	cpi	r24, 0x25	; 37
 73e:	41 f4       	brne	.+16     	; 0x750 <vfprintf+0x7e>
 740:	93 fd       	sbrc	r25, 3
 742:	85 91       	lpm	r24, Z+
 744:	93 ff       	sbrs	r25, 3
 746:	81 91       	ld	r24, Z+
 748:	fd 87       	std	Y+13, r31	; 0x0d
 74a:	ec 87       	std	Y+12, r30	; 0x0c
 74c:	85 32       	cpi	r24, 0x25	; 37
 74e:	29 f4       	brne	.+10     	; 0x75a <vfprintf+0x88>
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	b3 01       	movw	r22, r6
 754:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 758:	e4 cf       	rjmp	.-56     	; 0x722 <vfprintf+0x50>
 75a:	ff 24       	eor	r15, r15
 75c:	ee 24       	eor	r14, r14
 75e:	10 e0       	ldi	r17, 0x00	; 0
 760:	10 32       	cpi	r17, 0x20	; 32
 762:	b0 f4       	brcc	.+44     	; 0x790 <vfprintf+0xbe>
 764:	8b 32       	cpi	r24, 0x2B	; 43
 766:	69 f0       	breq	.+26     	; 0x782 <vfprintf+0xb0>
 768:	8c 32       	cpi	r24, 0x2C	; 44
 76a:	28 f4       	brcc	.+10     	; 0x776 <vfprintf+0xa4>
 76c:	80 32       	cpi	r24, 0x20	; 32
 76e:	51 f0       	breq	.+20     	; 0x784 <vfprintf+0xb2>
 770:	83 32       	cpi	r24, 0x23	; 35
 772:	71 f4       	brne	.+28     	; 0x790 <vfprintf+0xbe>
 774:	0b c0       	rjmp	.+22     	; 0x78c <vfprintf+0xba>
 776:	8d 32       	cpi	r24, 0x2D	; 45
 778:	39 f0       	breq	.+14     	; 0x788 <vfprintf+0xb6>
 77a:	80 33       	cpi	r24, 0x30	; 48
 77c:	49 f4       	brne	.+18     	; 0x790 <vfprintf+0xbe>
 77e:	11 60       	ori	r17, 0x01	; 1
 780:	2c c0       	rjmp	.+88     	; 0x7da <vfprintf+0x108>
 782:	12 60       	ori	r17, 0x02	; 2
 784:	14 60       	ori	r17, 0x04	; 4
 786:	29 c0       	rjmp	.+82     	; 0x7da <vfprintf+0x108>
 788:	18 60       	ori	r17, 0x08	; 8
 78a:	27 c0       	rjmp	.+78     	; 0x7da <vfprintf+0x108>
 78c:	10 61       	ori	r17, 0x10	; 16
 78e:	25 c0       	rjmp	.+74     	; 0x7da <vfprintf+0x108>
 790:	17 fd       	sbrc	r17, 7
 792:	2e c0       	rjmp	.+92     	; 0x7f0 <vfprintf+0x11e>
 794:	28 2f       	mov	r18, r24
 796:	20 53       	subi	r18, 0x30	; 48
 798:	2a 30       	cpi	r18, 0x0A	; 10
 79a:	98 f4       	brcc	.+38     	; 0x7c2 <vfprintf+0xf0>
 79c:	16 ff       	sbrs	r17, 6
 79e:	08 c0       	rjmp	.+16     	; 0x7b0 <vfprintf+0xde>
 7a0:	8f 2d       	mov	r24, r15
 7a2:	88 0f       	add	r24, r24
 7a4:	f8 2e       	mov	r15, r24
 7a6:	ff 0c       	add	r15, r15
 7a8:	ff 0c       	add	r15, r15
 7aa:	f8 0e       	add	r15, r24
 7ac:	f2 0e       	add	r15, r18
 7ae:	15 c0       	rjmp	.+42     	; 0x7da <vfprintf+0x108>
 7b0:	8e 2d       	mov	r24, r14
 7b2:	88 0f       	add	r24, r24
 7b4:	e8 2e       	mov	r14, r24
 7b6:	ee 0c       	add	r14, r14
 7b8:	ee 0c       	add	r14, r14
 7ba:	e8 0e       	add	r14, r24
 7bc:	e2 0e       	add	r14, r18
 7be:	10 62       	ori	r17, 0x20	; 32
 7c0:	0c c0       	rjmp	.+24     	; 0x7da <vfprintf+0x108>
 7c2:	8e 32       	cpi	r24, 0x2E	; 46
 7c4:	21 f4       	brne	.+8      	; 0x7ce <vfprintf+0xfc>
 7c6:	16 fd       	sbrc	r17, 6
 7c8:	6c c1       	rjmp	.+728    	; 0xaa2 <vfprintf+0x3d0>
 7ca:	10 64       	ori	r17, 0x40	; 64
 7cc:	06 c0       	rjmp	.+12     	; 0x7da <vfprintf+0x108>
 7ce:	8c 36       	cpi	r24, 0x6C	; 108
 7d0:	11 f4       	brne	.+4      	; 0x7d6 <vfprintf+0x104>
 7d2:	10 68       	ori	r17, 0x80	; 128
 7d4:	02 c0       	rjmp	.+4      	; 0x7da <vfprintf+0x108>
 7d6:	88 36       	cpi	r24, 0x68	; 104
 7d8:	59 f4       	brne	.+22     	; 0x7f0 <vfprintf+0x11e>
 7da:	ec 85       	ldd	r30, Y+12	; 0x0c
 7dc:	fd 85       	ldd	r31, Y+13	; 0x0d
 7de:	93 fd       	sbrc	r25, 3
 7e0:	85 91       	lpm	r24, Z+
 7e2:	93 ff       	sbrs	r25, 3
 7e4:	81 91       	ld	r24, Z+
 7e6:	fd 87       	std	Y+13, r31	; 0x0d
 7e8:	ec 87       	std	Y+12, r30	; 0x0c
 7ea:	88 23       	and	r24, r24
 7ec:	09 f0       	breq	.+2      	; 0x7f0 <vfprintf+0x11e>
 7ee:	b8 cf       	rjmp	.-144    	; 0x760 <vfprintf+0x8e>
 7f0:	98 2f       	mov	r25, r24
 7f2:	95 54       	subi	r25, 0x45	; 69
 7f4:	93 30       	cpi	r25, 0x03	; 3
 7f6:	18 f0       	brcs	.+6      	; 0x7fe <vfprintf+0x12c>
 7f8:	90 52       	subi	r25, 0x20	; 32
 7fa:	93 30       	cpi	r25, 0x03	; 3
 7fc:	38 f4       	brcc	.+14     	; 0x80c <vfprintf+0x13a>
 7fe:	24 e0       	ldi	r18, 0x04	; 4
 800:	30 e0       	ldi	r19, 0x00	; 0
 802:	a2 0e       	add	r10, r18
 804:	b3 1e       	adc	r11, r19
 806:	3f e3       	ldi	r19, 0x3F	; 63
 808:	39 83       	std	Y+1, r19	; 0x01
 80a:	0f c0       	rjmp	.+30     	; 0x82a <vfprintf+0x158>
 80c:	83 36       	cpi	r24, 0x63	; 99
 80e:	31 f0       	breq	.+12     	; 0x81c <vfprintf+0x14a>
 810:	83 37       	cpi	r24, 0x73	; 115
 812:	81 f0       	breq	.+32     	; 0x834 <vfprintf+0x162>
 814:	83 35       	cpi	r24, 0x53	; 83
 816:	09 f0       	breq	.+2      	; 0x81a <vfprintf+0x148>
 818:	5a c0       	rjmp	.+180    	; 0x8ce <vfprintf+0x1fc>
 81a:	22 c0       	rjmp	.+68     	; 0x860 <vfprintf+0x18e>
 81c:	f5 01       	movw	r30, r10
 81e:	80 81       	ld	r24, Z
 820:	89 83       	std	Y+1, r24	; 0x01
 822:	22 e0       	ldi	r18, 0x02	; 2
 824:	30 e0       	ldi	r19, 0x00	; 0
 826:	a2 0e       	add	r10, r18
 828:	b3 1e       	adc	r11, r19
 82a:	21 e0       	ldi	r18, 0x01	; 1
 82c:	c2 2e       	mov	r12, r18
 82e:	d1 2c       	mov	r13, r1
 830:	42 01       	movw	r8, r4
 832:	14 c0       	rjmp	.+40     	; 0x85c <vfprintf+0x18a>
 834:	92 e0       	ldi	r25, 0x02	; 2
 836:	29 2e       	mov	r2, r25
 838:	31 2c       	mov	r3, r1
 83a:	2a 0c       	add	r2, r10
 83c:	3b 1c       	adc	r3, r11
 83e:	f5 01       	movw	r30, r10
 840:	80 80       	ld	r8, Z
 842:	91 80       	ldd	r9, Z+1	; 0x01
 844:	16 ff       	sbrs	r17, 6
 846:	03 c0       	rjmp	.+6      	; 0x84e <vfprintf+0x17c>
 848:	6f 2d       	mov	r22, r15
 84a:	70 e0       	ldi	r23, 0x00	; 0
 84c:	02 c0       	rjmp	.+4      	; 0x852 <vfprintf+0x180>
 84e:	6f ef       	ldi	r22, 0xFF	; 255
 850:	7f ef       	ldi	r23, 0xFF	; 255
 852:	c4 01       	movw	r24, r8
 854:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <strnlen>
 858:	6c 01       	movw	r12, r24
 85a:	51 01       	movw	r10, r2
 85c:	1f 77       	andi	r17, 0x7F	; 127
 85e:	15 c0       	rjmp	.+42     	; 0x88a <vfprintf+0x1b8>
 860:	82 e0       	ldi	r24, 0x02	; 2
 862:	28 2e       	mov	r2, r24
 864:	31 2c       	mov	r3, r1
 866:	2a 0c       	add	r2, r10
 868:	3b 1c       	adc	r3, r11
 86a:	f5 01       	movw	r30, r10
 86c:	80 80       	ld	r8, Z
 86e:	91 80       	ldd	r9, Z+1	; 0x01
 870:	16 ff       	sbrs	r17, 6
 872:	03 c0       	rjmp	.+6      	; 0x87a <vfprintf+0x1a8>
 874:	6f 2d       	mov	r22, r15
 876:	70 e0       	ldi	r23, 0x00	; 0
 878:	02 c0       	rjmp	.+4      	; 0x87e <vfprintf+0x1ac>
 87a:	6f ef       	ldi	r22, 0xFF	; 255
 87c:	7f ef       	ldi	r23, 0xFF	; 255
 87e:	c4 01       	movw	r24, r8
 880:	0e 94 70 05 	call	0xae0	; 0xae0 <strnlen_P>
 884:	6c 01       	movw	r12, r24
 886:	10 68       	ori	r17, 0x80	; 128
 888:	51 01       	movw	r10, r2
 88a:	13 fd       	sbrc	r17, 3
 88c:	1c c0       	rjmp	.+56     	; 0x8c6 <vfprintf+0x1f4>
 88e:	06 c0       	rjmp	.+12     	; 0x89c <vfprintf+0x1ca>
 890:	80 e2       	ldi	r24, 0x20	; 32
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	b3 01       	movw	r22, r6
 896:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 89a:	ea 94       	dec	r14
 89c:	8e 2d       	mov	r24, r14
 89e:	90 e0       	ldi	r25, 0x00	; 0
 8a0:	c8 16       	cp	r12, r24
 8a2:	d9 06       	cpc	r13, r25
 8a4:	a8 f3       	brcs	.-22     	; 0x890 <vfprintf+0x1be>
 8a6:	0f c0       	rjmp	.+30     	; 0x8c6 <vfprintf+0x1f4>
 8a8:	f4 01       	movw	r30, r8
 8aa:	17 fd       	sbrc	r17, 7
 8ac:	85 91       	lpm	r24, Z+
 8ae:	17 ff       	sbrs	r17, 7
 8b0:	81 91       	ld	r24, Z+
 8b2:	4f 01       	movw	r8, r30
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	b3 01       	movw	r22, r6
 8b8:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 8bc:	e1 10       	cpse	r14, r1
 8be:	ea 94       	dec	r14
 8c0:	08 94       	sec
 8c2:	c1 08       	sbc	r12, r1
 8c4:	d1 08       	sbc	r13, r1
 8c6:	c1 14       	cp	r12, r1
 8c8:	d1 04       	cpc	r13, r1
 8ca:	71 f7       	brne	.-36     	; 0x8a8 <vfprintf+0x1d6>
 8cc:	e7 c0       	rjmp	.+462    	; 0xa9c <vfprintf+0x3ca>
 8ce:	84 36       	cpi	r24, 0x64	; 100
 8d0:	11 f0       	breq	.+4      	; 0x8d6 <vfprintf+0x204>
 8d2:	89 36       	cpi	r24, 0x69	; 105
 8d4:	51 f5       	brne	.+84     	; 0x92a <vfprintf+0x258>
 8d6:	f5 01       	movw	r30, r10
 8d8:	17 ff       	sbrs	r17, 7
 8da:	07 c0       	rjmp	.+14     	; 0x8ea <vfprintf+0x218>
 8dc:	80 81       	ld	r24, Z
 8de:	91 81       	ldd	r25, Z+1	; 0x01
 8e0:	a2 81       	ldd	r26, Z+2	; 0x02
 8e2:	b3 81       	ldd	r27, Z+3	; 0x03
 8e4:	24 e0       	ldi	r18, 0x04	; 4
 8e6:	30 e0       	ldi	r19, 0x00	; 0
 8e8:	08 c0       	rjmp	.+16     	; 0x8fa <vfprintf+0x228>
 8ea:	80 81       	ld	r24, Z
 8ec:	91 81       	ldd	r25, Z+1	; 0x01
 8ee:	aa 27       	eor	r26, r26
 8f0:	97 fd       	sbrc	r25, 7
 8f2:	a0 95       	com	r26
 8f4:	ba 2f       	mov	r27, r26
 8f6:	22 e0       	ldi	r18, 0x02	; 2
 8f8:	30 e0       	ldi	r19, 0x00	; 0
 8fa:	a2 0e       	add	r10, r18
 8fc:	b3 1e       	adc	r11, r19
 8fe:	01 2f       	mov	r16, r17
 900:	0f 76       	andi	r16, 0x6F	; 111
 902:	b7 ff       	sbrs	r27, 7
 904:	08 c0       	rjmp	.+16     	; 0x916 <vfprintf+0x244>
 906:	b0 95       	com	r27
 908:	a0 95       	com	r26
 90a:	90 95       	com	r25
 90c:	81 95       	neg	r24
 90e:	9f 4f       	sbci	r25, 0xFF	; 255
 910:	af 4f       	sbci	r26, 0xFF	; 255
 912:	bf 4f       	sbci	r27, 0xFF	; 255
 914:	00 68       	ori	r16, 0x80	; 128
 916:	bc 01       	movw	r22, r24
 918:	cd 01       	movw	r24, r26
 91a:	a2 01       	movw	r20, r4
 91c:	2a e0       	ldi	r18, 0x0A	; 10
 91e:	30 e0       	ldi	r19, 0x00	; 0
 920:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <__ultoa_invert>
 924:	d8 2e       	mov	r13, r24
 926:	d4 18       	sub	r13, r4
 928:	3f c0       	rjmp	.+126    	; 0x9a8 <vfprintf+0x2d6>
 92a:	85 37       	cpi	r24, 0x75	; 117
 92c:	21 f4       	brne	.+8      	; 0x936 <vfprintf+0x264>
 92e:	1f 7e       	andi	r17, 0xEF	; 239
 930:	2a e0       	ldi	r18, 0x0A	; 10
 932:	30 e0       	ldi	r19, 0x00	; 0
 934:	20 c0       	rjmp	.+64     	; 0x976 <vfprintf+0x2a4>
 936:	19 7f       	andi	r17, 0xF9	; 249
 938:	8f 36       	cpi	r24, 0x6F	; 111
 93a:	a9 f0       	breq	.+42     	; 0x966 <vfprintf+0x294>
 93c:	80 37       	cpi	r24, 0x70	; 112
 93e:	20 f4       	brcc	.+8      	; 0x948 <vfprintf+0x276>
 940:	88 35       	cpi	r24, 0x58	; 88
 942:	09 f0       	breq	.+2      	; 0x946 <vfprintf+0x274>
 944:	ae c0       	rjmp	.+348    	; 0xaa2 <vfprintf+0x3d0>
 946:	0b c0       	rjmp	.+22     	; 0x95e <vfprintf+0x28c>
 948:	80 37       	cpi	r24, 0x70	; 112
 94a:	21 f0       	breq	.+8      	; 0x954 <vfprintf+0x282>
 94c:	88 37       	cpi	r24, 0x78	; 120
 94e:	09 f0       	breq	.+2      	; 0x952 <vfprintf+0x280>
 950:	a8 c0       	rjmp	.+336    	; 0xaa2 <vfprintf+0x3d0>
 952:	01 c0       	rjmp	.+2      	; 0x956 <vfprintf+0x284>
 954:	10 61       	ori	r17, 0x10	; 16
 956:	14 ff       	sbrs	r17, 4
 958:	09 c0       	rjmp	.+18     	; 0x96c <vfprintf+0x29a>
 95a:	14 60       	ori	r17, 0x04	; 4
 95c:	07 c0       	rjmp	.+14     	; 0x96c <vfprintf+0x29a>
 95e:	14 ff       	sbrs	r17, 4
 960:	08 c0       	rjmp	.+16     	; 0x972 <vfprintf+0x2a0>
 962:	16 60       	ori	r17, 0x06	; 6
 964:	06 c0       	rjmp	.+12     	; 0x972 <vfprintf+0x2a0>
 966:	28 e0       	ldi	r18, 0x08	; 8
 968:	30 e0       	ldi	r19, 0x00	; 0
 96a:	05 c0       	rjmp	.+10     	; 0x976 <vfprintf+0x2a4>
 96c:	20 e1       	ldi	r18, 0x10	; 16
 96e:	30 e0       	ldi	r19, 0x00	; 0
 970:	02 c0       	rjmp	.+4      	; 0x976 <vfprintf+0x2a4>
 972:	20 e1       	ldi	r18, 0x10	; 16
 974:	32 e0       	ldi	r19, 0x02	; 2
 976:	f5 01       	movw	r30, r10
 978:	17 ff       	sbrs	r17, 7
 97a:	07 c0       	rjmp	.+14     	; 0x98a <vfprintf+0x2b8>
 97c:	60 81       	ld	r22, Z
 97e:	71 81       	ldd	r23, Z+1	; 0x01
 980:	82 81       	ldd	r24, Z+2	; 0x02
 982:	93 81       	ldd	r25, Z+3	; 0x03
 984:	44 e0       	ldi	r20, 0x04	; 4
 986:	50 e0       	ldi	r21, 0x00	; 0
 988:	06 c0       	rjmp	.+12     	; 0x996 <vfprintf+0x2c4>
 98a:	60 81       	ld	r22, Z
 98c:	71 81       	ldd	r23, Z+1	; 0x01
 98e:	80 e0       	ldi	r24, 0x00	; 0
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	42 e0       	ldi	r20, 0x02	; 2
 994:	50 e0       	ldi	r21, 0x00	; 0
 996:	a4 0e       	add	r10, r20
 998:	b5 1e       	adc	r11, r21
 99a:	a2 01       	movw	r20, r4
 99c:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <__ultoa_invert>
 9a0:	d8 2e       	mov	r13, r24
 9a2:	d4 18       	sub	r13, r4
 9a4:	01 2f       	mov	r16, r17
 9a6:	0f 77       	andi	r16, 0x7F	; 127
 9a8:	06 ff       	sbrs	r16, 6
 9aa:	09 c0       	rjmp	.+18     	; 0x9be <vfprintf+0x2ec>
 9ac:	0e 7f       	andi	r16, 0xFE	; 254
 9ae:	df 14       	cp	r13, r15
 9b0:	30 f4       	brcc	.+12     	; 0x9be <vfprintf+0x2ec>
 9b2:	04 ff       	sbrs	r16, 4
 9b4:	06 c0       	rjmp	.+12     	; 0x9c2 <vfprintf+0x2f0>
 9b6:	02 fd       	sbrc	r16, 2
 9b8:	04 c0       	rjmp	.+8      	; 0x9c2 <vfprintf+0x2f0>
 9ba:	0f 7e       	andi	r16, 0xEF	; 239
 9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <vfprintf+0x2f0>
 9be:	1d 2d       	mov	r17, r13
 9c0:	01 c0       	rjmp	.+2      	; 0x9c4 <vfprintf+0x2f2>
 9c2:	1f 2d       	mov	r17, r15
 9c4:	80 2f       	mov	r24, r16
 9c6:	90 e0       	ldi	r25, 0x00	; 0
 9c8:	04 ff       	sbrs	r16, 4
 9ca:	0c c0       	rjmp	.+24     	; 0x9e4 <vfprintf+0x312>
 9cc:	fe 01       	movw	r30, r28
 9ce:	ed 0d       	add	r30, r13
 9d0:	f1 1d       	adc	r31, r1
 9d2:	20 81       	ld	r18, Z
 9d4:	20 33       	cpi	r18, 0x30	; 48
 9d6:	11 f4       	brne	.+4      	; 0x9dc <vfprintf+0x30a>
 9d8:	09 7e       	andi	r16, 0xE9	; 233
 9da:	09 c0       	rjmp	.+18     	; 0x9ee <vfprintf+0x31c>
 9dc:	02 ff       	sbrs	r16, 2
 9de:	06 c0       	rjmp	.+12     	; 0x9ec <vfprintf+0x31a>
 9e0:	1e 5f       	subi	r17, 0xFE	; 254
 9e2:	05 c0       	rjmp	.+10     	; 0x9ee <vfprintf+0x31c>
 9e4:	86 78       	andi	r24, 0x86	; 134
 9e6:	90 70       	andi	r25, 0x00	; 0
 9e8:	00 97       	sbiw	r24, 0x00	; 0
 9ea:	09 f0       	breq	.+2      	; 0x9ee <vfprintf+0x31c>
 9ec:	1f 5f       	subi	r17, 0xFF	; 255
 9ee:	80 2e       	mov	r8, r16
 9f0:	99 24       	eor	r9, r9
 9f2:	03 fd       	sbrc	r16, 3
 9f4:	12 c0       	rjmp	.+36     	; 0xa1a <vfprintf+0x348>
 9f6:	00 ff       	sbrs	r16, 0
 9f8:	0d c0       	rjmp	.+26     	; 0xa14 <vfprintf+0x342>
 9fa:	fd 2c       	mov	r15, r13
 9fc:	1e 15       	cp	r17, r14
 9fe:	50 f4       	brcc	.+20     	; 0xa14 <vfprintf+0x342>
 a00:	fe 0c       	add	r15, r14
 a02:	f1 1a       	sub	r15, r17
 a04:	1e 2d       	mov	r17, r14
 a06:	06 c0       	rjmp	.+12     	; 0xa14 <vfprintf+0x342>
 a08:	80 e2       	ldi	r24, 0x20	; 32
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	b3 01       	movw	r22, r6
 a0e:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 a12:	1f 5f       	subi	r17, 0xFF	; 255
 a14:	1e 15       	cp	r17, r14
 a16:	c0 f3       	brcs	.-16     	; 0xa08 <vfprintf+0x336>
 a18:	04 c0       	rjmp	.+8      	; 0xa22 <vfprintf+0x350>
 a1a:	1e 15       	cp	r17, r14
 a1c:	10 f4       	brcc	.+4      	; 0xa22 <vfprintf+0x350>
 a1e:	e1 1a       	sub	r14, r17
 a20:	01 c0       	rjmp	.+2      	; 0xa24 <vfprintf+0x352>
 a22:	ee 24       	eor	r14, r14
 a24:	84 fe       	sbrs	r8, 4
 a26:	0f c0       	rjmp	.+30     	; 0xa46 <vfprintf+0x374>
 a28:	80 e3       	ldi	r24, 0x30	; 48
 a2a:	90 e0       	ldi	r25, 0x00	; 0
 a2c:	b3 01       	movw	r22, r6
 a2e:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 a32:	82 fe       	sbrs	r8, 2
 a34:	1f c0       	rjmp	.+62     	; 0xa74 <vfprintf+0x3a2>
 a36:	81 fe       	sbrs	r8, 1
 a38:	03 c0       	rjmp	.+6      	; 0xa40 <vfprintf+0x36e>
 a3a:	88 e5       	ldi	r24, 0x58	; 88
 a3c:	90 e0       	ldi	r25, 0x00	; 0
 a3e:	10 c0       	rjmp	.+32     	; 0xa60 <vfprintf+0x38e>
 a40:	88 e7       	ldi	r24, 0x78	; 120
 a42:	90 e0       	ldi	r25, 0x00	; 0
 a44:	0d c0       	rjmp	.+26     	; 0xa60 <vfprintf+0x38e>
 a46:	c4 01       	movw	r24, r8
 a48:	86 78       	andi	r24, 0x86	; 134
 a4a:	90 70       	andi	r25, 0x00	; 0
 a4c:	00 97       	sbiw	r24, 0x00	; 0
 a4e:	91 f0       	breq	.+36     	; 0xa74 <vfprintf+0x3a2>
 a50:	81 fc       	sbrc	r8, 1
 a52:	02 c0       	rjmp	.+4      	; 0xa58 <vfprintf+0x386>
 a54:	80 e2       	ldi	r24, 0x20	; 32
 a56:	01 c0       	rjmp	.+2      	; 0xa5a <vfprintf+0x388>
 a58:	8b e2       	ldi	r24, 0x2B	; 43
 a5a:	07 fd       	sbrc	r16, 7
 a5c:	8d e2       	ldi	r24, 0x2D	; 45
 a5e:	90 e0       	ldi	r25, 0x00	; 0
 a60:	b3 01       	movw	r22, r6
 a62:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 a66:	06 c0       	rjmp	.+12     	; 0xa74 <vfprintf+0x3a2>
 a68:	80 e3       	ldi	r24, 0x30	; 48
 a6a:	90 e0       	ldi	r25, 0x00	; 0
 a6c:	b3 01       	movw	r22, r6
 a6e:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 a72:	fa 94       	dec	r15
 a74:	df 14       	cp	r13, r15
 a76:	c0 f3       	brcs	.-16     	; 0xa68 <vfprintf+0x396>
 a78:	da 94       	dec	r13
 a7a:	f2 01       	movw	r30, r4
 a7c:	ed 0d       	add	r30, r13
 a7e:	f1 1d       	adc	r31, r1
 a80:	80 81       	ld	r24, Z
 a82:	90 e0       	ldi	r25, 0x00	; 0
 a84:	b3 01       	movw	r22, r6
 a86:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 a8a:	dd 20       	and	r13, r13
 a8c:	a9 f7       	brne	.-22     	; 0xa78 <vfprintf+0x3a6>
 a8e:	06 c0       	rjmp	.+12     	; 0xa9c <vfprintf+0x3ca>
 a90:	80 e2       	ldi	r24, 0x20	; 32
 a92:	90 e0       	ldi	r25, 0x00	; 0
 a94:	b3 01       	movw	r22, r6
 a96:	0e 94 c6 05 	call	0xb8c	; 0xb8c <fputc>
 a9a:	ea 94       	dec	r14
 a9c:	ee 20       	and	r14, r14
 a9e:	c1 f7       	brne	.-16     	; 0xa90 <vfprintf+0x3be>
 aa0:	40 ce       	rjmp	.-896    	; 0x722 <vfprintf+0x50>
 aa2:	f3 01       	movw	r30, r6
 aa4:	86 81       	ldd	r24, Z+6	; 0x06
 aa6:	97 81       	ldd	r25, Z+7	; 0x07
 aa8:	02 c0       	rjmp	.+4      	; 0xaae <vfprintf+0x3dc>
 aaa:	8f ef       	ldi	r24, 0xFF	; 255
 aac:	9f ef       	ldi	r25, 0xFF	; 255
 aae:	2d 96       	adiw	r28, 0x0d	; 13
 ab0:	0f b6       	in	r0, 0x3f	; 63
 ab2:	f8 94       	cli
 ab4:	de bf       	out	0x3e, r29	; 62
 ab6:	0f be       	out	0x3f, r0	; 63
 ab8:	cd bf       	out	0x3d, r28	; 61
 aba:	df 91       	pop	r29
 abc:	cf 91       	pop	r28
 abe:	1f 91       	pop	r17
 ac0:	0f 91       	pop	r16
 ac2:	ff 90       	pop	r15
 ac4:	ef 90       	pop	r14
 ac6:	df 90       	pop	r13
 ac8:	cf 90       	pop	r12
 aca:	bf 90       	pop	r11
 acc:	af 90       	pop	r10
 ace:	9f 90       	pop	r9
 ad0:	8f 90       	pop	r8
 ad2:	7f 90       	pop	r7
 ad4:	6f 90       	pop	r6
 ad6:	5f 90       	pop	r5
 ad8:	4f 90       	pop	r4
 ada:	3f 90       	pop	r3
 adc:	2f 90       	pop	r2
 ade:	08 95       	ret

00000ae0 <strnlen_P>:
 ae0:	fc 01       	movw	r30, r24
 ae2:	05 90       	lpm	r0, Z+
 ae4:	61 50       	subi	r22, 0x01	; 1
 ae6:	70 40       	sbci	r23, 0x00	; 0
 ae8:	01 10       	cpse	r0, r1
 aea:	d8 f7       	brcc	.-10     	; 0xae2 <strnlen_P+0x2>
 aec:	80 95       	com	r24
 aee:	90 95       	com	r25
 af0:	8e 0f       	add	r24, r30
 af2:	9f 1f       	adc	r25, r31
 af4:	08 95       	ret

00000af6 <strnlen>:
 af6:	fc 01       	movw	r30, r24
 af8:	61 50       	subi	r22, 0x01	; 1
 afa:	70 40       	sbci	r23, 0x00	; 0
 afc:	01 90       	ld	r0, Z+
 afe:	01 10       	cpse	r0, r1
 b00:	d8 f7       	brcc	.-10     	; 0xaf8 <strnlen+0x2>
 b02:	80 95       	com	r24
 b04:	90 95       	com	r25
 b06:	8e 0f       	add	r24, r30
 b08:	9f 1f       	adc	r25, r31
 b0a:	08 95       	ret

00000b0c <fgetc>:
 b0c:	cf 93       	push	r28
 b0e:	df 93       	push	r29
 b10:	ec 01       	movw	r28, r24
 b12:	2b 81       	ldd	r18, Y+3	; 0x03
 b14:	20 ff       	sbrs	r18, 0
 b16:	35 c0       	rjmp	.+106    	; 0xb82 <fgetc+0x76>
 b18:	26 ff       	sbrs	r18, 6
 b1a:	09 c0       	rjmp	.+18     	; 0xb2e <fgetc+0x22>
 b1c:	2f 7b       	andi	r18, 0xBF	; 191
 b1e:	2b 83       	std	Y+3, r18	; 0x03
 b20:	8e 81       	ldd	r24, Y+6	; 0x06
 b22:	9f 81       	ldd	r25, Y+7	; 0x07
 b24:	01 96       	adiw	r24, 0x01	; 1
 b26:	9f 83       	std	Y+7, r25	; 0x07
 b28:	8e 83       	std	Y+6, r24	; 0x06
 b2a:	8a 81       	ldd	r24, Y+2	; 0x02
 b2c:	28 c0       	rjmp	.+80     	; 0xb7e <fgetc+0x72>
 b2e:	22 ff       	sbrs	r18, 2
 b30:	0f c0       	rjmp	.+30     	; 0xb50 <fgetc+0x44>
 b32:	e8 81       	ld	r30, Y
 b34:	f9 81       	ldd	r31, Y+1	; 0x01
 b36:	80 81       	ld	r24, Z
 b38:	99 27       	eor	r25, r25
 b3a:	87 fd       	sbrc	r24, 7
 b3c:	90 95       	com	r25
 b3e:	00 97       	sbiw	r24, 0x00	; 0
 b40:	19 f4       	brne	.+6      	; 0xb48 <fgetc+0x3c>
 b42:	20 62       	ori	r18, 0x20	; 32
 b44:	2b 83       	std	Y+3, r18	; 0x03
 b46:	1d c0       	rjmp	.+58     	; 0xb82 <fgetc+0x76>
 b48:	31 96       	adiw	r30, 0x01	; 1
 b4a:	f9 83       	std	Y+1, r31	; 0x01
 b4c:	e8 83       	st	Y, r30
 b4e:	11 c0       	rjmp	.+34     	; 0xb72 <fgetc+0x66>
 b50:	ea 85       	ldd	r30, Y+10	; 0x0a
 b52:	fb 85       	ldd	r31, Y+11	; 0x0b
 b54:	ce 01       	movw	r24, r28
 b56:	19 95       	eicall
 b58:	97 ff       	sbrs	r25, 7
 b5a:	0b c0       	rjmp	.+22     	; 0xb72 <fgetc+0x66>
 b5c:	2b 81       	ldd	r18, Y+3	; 0x03
 b5e:	3f ef       	ldi	r19, 0xFF	; 255
 b60:	8f 3f       	cpi	r24, 0xFF	; 255
 b62:	93 07       	cpc	r25, r19
 b64:	11 f4       	brne	.+4      	; 0xb6a <fgetc+0x5e>
 b66:	80 e1       	ldi	r24, 0x10	; 16
 b68:	01 c0       	rjmp	.+2      	; 0xb6c <fgetc+0x60>
 b6a:	80 e2       	ldi	r24, 0x20	; 32
 b6c:	82 2b       	or	r24, r18
 b6e:	8b 83       	std	Y+3, r24	; 0x03
 b70:	08 c0       	rjmp	.+16     	; 0xb82 <fgetc+0x76>
 b72:	2e 81       	ldd	r18, Y+6	; 0x06
 b74:	3f 81       	ldd	r19, Y+7	; 0x07
 b76:	2f 5f       	subi	r18, 0xFF	; 255
 b78:	3f 4f       	sbci	r19, 0xFF	; 255
 b7a:	3f 83       	std	Y+7, r19	; 0x07
 b7c:	2e 83       	std	Y+6, r18	; 0x06
 b7e:	90 e0       	ldi	r25, 0x00	; 0
 b80:	02 c0       	rjmp	.+4      	; 0xb86 <fgetc+0x7a>
 b82:	8f ef       	ldi	r24, 0xFF	; 255
 b84:	9f ef       	ldi	r25, 0xFF	; 255
 b86:	df 91       	pop	r29
 b88:	cf 91       	pop	r28
 b8a:	08 95       	ret

00000b8c <fputc>:
 b8c:	0f 93       	push	r16
 b8e:	1f 93       	push	r17
 b90:	cf 93       	push	r28
 b92:	df 93       	push	r29
 b94:	8c 01       	movw	r16, r24
 b96:	eb 01       	movw	r28, r22
 b98:	8b 81       	ldd	r24, Y+3	; 0x03
 b9a:	81 ff       	sbrs	r24, 1
 b9c:	1b c0       	rjmp	.+54     	; 0xbd4 <fputc+0x48>
 b9e:	82 ff       	sbrs	r24, 2
 ba0:	0d c0       	rjmp	.+26     	; 0xbbc <fputc+0x30>
 ba2:	2e 81       	ldd	r18, Y+6	; 0x06
 ba4:	3f 81       	ldd	r19, Y+7	; 0x07
 ba6:	8c 81       	ldd	r24, Y+4	; 0x04
 ba8:	9d 81       	ldd	r25, Y+5	; 0x05
 baa:	28 17       	cp	r18, r24
 bac:	39 07       	cpc	r19, r25
 bae:	64 f4       	brge	.+24     	; 0xbc8 <fputc+0x3c>
 bb0:	e8 81       	ld	r30, Y
 bb2:	f9 81       	ldd	r31, Y+1	; 0x01
 bb4:	01 93       	st	Z+, r16
 bb6:	f9 83       	std	Y+1, r31	; 0x01
 bb8:	e8 83       	st	Y, r30
 bba:	06 c0       	rjmp	.+12     	; 0xbc8 <fputc+0x3c>
 bbc:	e8 85       	ldd	r30, Y+8	; 0x08
 bbe:	f9 85       	ldd	r31, Y+9	; 0x09
 bc0:	80 2f       	mov	r24, r16
 bc2:	19 95       	eicall
 bc4:	00 97       	sbiw	r24, 0x00	; 0
 bc6:	31 f4       	brne	.+12     	; 0xbd4 <fputc+0x48>
 bc8:	8e 81       	ldd	r24, Y+6	; 0x06
 bca:	9f 81       	ldd	r25, Y+7	; 0x07
 bcc:	01 96       	adiw	r24, 0x01	; 1
 bce:	9f 83       	std	Y+7, r25	; 0x07
 bd0:	8e 83       	std	Y+6, r24	; 0x06
 bd2:	02 c0       	rjmp	.+4      	; 0xbd8 <fputc+0x4c>
 bd4:	0f ef       	ldi	r16, 0xFF	; 255
 bd6:	1f ef       	ldi	r17, 0xFF	; 255
 bd8:	c8 01       	movw	r24, r16
 bda:	df 91       	pop	r29
 bdc:	cf 91       	pop	r28
 bde:	1f 91       	pop	r17
 be0:	0f 91       	pop	r16
 be2:	08 95       	ret

00000be4 <__ultoa_invert>:
 be4:	fa 01       	movw	r30, r20
 be6:	aa 27       	eor	r26, r26
 be8:	28 30       	cpi	r18, 0x08	; 8
 bea:	51 f1       	breq	.+84     	; 0xc40 <__ultoa_invert+0x5c>
 bec:	20 31       	cpi	r18, 0x10	; 16
 bee:	81 f1       	breq	.+96     	; 0xc50 <__ultoa_invert+0x6c>
 bf0:	e8 94       	clt
 bf2:	6f 93       	push	r22
 bf4:	6e 7f       	andi	r22, 0xFE	; 254
 bf6:	6e 5f       	subi	r22, 0xFE	; 254
 bf8:	7f 4f       	sbci	r23, 0xFF	; 255
 bfa:	8f 4f       	sbci	r24, 0xFF	; 255
 bfc:	9f 4f       	sbci	r25, 0xFF	; 255
 bfe:	af 4f       	sbci	r26, 0xFF	; 255
 c00:	b1 e0       	ldi	r27, 0x01	; 1
 c02:	3e d0       	rcall	.+124    	; 0xc80 <__ultoa_invert+0x9c>
 c04:	b4 e0       	ldi	r27, 0x04	; 4
 c06:	3c d0       	rcall	.+120    	; 0xc80 <__ultoa_invert+0x9c>
 c08:	67 0f       	add	r22, r23
 c0a:	78 1f       	adc	r23, r24
 c0c:	89 1f       	adc	r24, r25
 c0e:	9a 1f       	adc	r25, r26
 c10:	a1 1d       	adc	r26, r1
 c12:	68 0f       	add	r22, r24
 c14:	79 1f       	adc	r23, r25
 c16:	8a 1f       	adc	r24, r26
 c18:	91 1d       	adc	r25, r1
 c1a:	a1 1d       	adc	r26, r1
 c1c:	6a 0f       	add	r22, r26
 c1e:	71 1d       	adc	r23, r1
 c20:	81 1d       	adc	r24, r1
 c22:	91 1d       	adc	r25, r1
 c24:	a1 1d       	adc	r26, r1
 c26:	20 d0       	rcall	.+64     	; 0xc68 <__ultoa_invert+0x84>
 c28:	09 f4       	brne	.+2      	; 0xc2c <__ultoa_invert+0x48>
 c2a:	68 94       	set
 c2c:	3f 91       	pop	r19
 c2e:	2a e0       	ldi	r18, 0x0A	; 10
 c30:	26 9f       	mul	r18, r22
 c32:	11 24       	eor	r1, r1
 c34:	30 19       	sub	r19, r0
 c36:	30 5d       	subi	r19, 0xD0	; 208
 c38:	31 93       	st	Z+, r19
 c3a:	de f6       	brtc	.-74     	; 0xbf2 <__ultoa_invert+0xe>
 c3c:	cf 01       	movw	r24, r30
 c3e:	08 95       	ret
 c40:	46 2f       	mov	r20, r22
 c42:	47 70       	andi	r20, 0x07	; 7
 c44:	40 5d       	subi	r20, 0xD0	; 208
 c46:	41 93       	st	Z+, r20
 c48:	b3 e0       	ldi	r27, 0x03	; 3
 c4a:	0f d0       	rcall	.+30     	; 0xc6a <__ultoa_invert+0x86>
 c4c:	c9 f7       	brne	.-14     	; 0xc40 <__ultoa_invert+0x5c>
 c4e:	f6 cf       	rjmp	.-20     	; 0xc3c <__ultoa_invert+0x58>
 c50:	46 2f       	mov	r20, r22
 c52:	4f 70       	andi	r20, 0x0F	; 15
 c54:	40 5d       	subi	r20, 0xD0	; 208
 c56:	4a 33       	cpi	r20, 0x3A	; 58
 c58:	18 f0       	brcs	.+6      	; 0xc60 <__ultoa_invert+0x7c>
 c5a:	49 5d       	subi	r20, 0xD9	; 217
 c5c:	31 fd       	sbrc	r19, 1
 c5e:	40 52       	subi	r20, 0x20	; 32
 c60:	41 93       	st	Z+, r20
 c62:	02 d0       	rcall	.+4      	; 0xc68 <__ultoa_invert+0x84>
 c64:	a9 f7       	brne	.-22     	; 0xc50 <__ultoa_invert+0x6c>
 c66:	ea cf       	rjmp	.-44     	; 0xc3c <__ultoa_invert+0x58>
 c68:	b4 e0       	ldi	r27, 0x04	; 4
 c6a:	a6 95       	lsr	r26
 c6c:	97 95       	ror	r25
 c6e:	87 95       	ror	r24
 c70:	77 95       	ror	r23
 c72:	67 95       	ror	r22
 c74:	ba 95       	dec	r27
 c76:	c9 f7       	brne	.-14     	; 0xc6a <__ultoa_invert+0x86>
 c78:	00 97       	sbiw	r24, 0x00	; 0
 c7a:	61 05       	cpc	r22, r1
 c7c:	71 05       	cpc	r23, r1
 c7e:	08 95       	ret
 c80:	9b 01       	movw	r18, r22
 c82:	ac 01       	movw	r20, r24
 c84:	0a 2e       	mov	r0, r26
 c86:	06 94       	lsr	r0
 c88:	57 95       	ror	r21
 c8a:	47 95       	ror	r20
 c8c:	37 95       	ror	r19
 c8e:	27 95       	ror	r18
 c90:	ba 95       	dec	r27
 c92:	c9 f7       	brne	.-14     	; 0xc86 <__ultoa_invert+0xa2>
 c94:	62 0f       	add	r22, r18
 c96:	73 1f       	adc	r23, r19
 c98:	84 1f       	adc	r24, r20
 c9a:	95 1f       	adc	r25, r21
 c9c:	a0 1d       	adc	r26, r0
 c9e:	08 95       	ret

00000ca0 <_exit>:
 ca0:	f8 94       	cli

00000ca2 <__stop_program>:
 ca2:	ff cf       	rjmp	.-2      	; 0xca2 <__stop_program>
